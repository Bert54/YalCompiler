.data
ln : 	.asciiz "\n"

.text
main :

move $s7,$sp

#Déclaration
addi $sp, $sp, -4 
sw $zero, 0($s7)
#Déclaration
addi $sp, $sp, -4 
sw $zero, -4($s7)
#Affectation
li $v0, 5
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($s7)
#Déclaration fonction
j fonctionskip0
un0: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
#Ecriture
sw $s7, 0($sp)
addi $sp, $sp, -4
lw $s7,8($s7)
sw $s7, 0($sp)
addi $sp, $sp, -4
lw $s7,8($s7)
lw $v0,0($s7)
addi $sp, $sp, 4
lw $s7, ($sp)
addi $sp, $sp, 4
lw $s7, ($sp)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall

#Retour de la fonction 
li $v0, 0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,8
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 4($sp)
jr $ra
fonctionskip0:
#Déclaration fonction
j fonctionskip1
deux0: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 2
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
#Retour de la fonction 
addi $sp, $sp, -4
jal un0
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,8
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 4($sp)
jr $ra
fonctionskip1:
#Affectation
addi $sp, $sp, -4
jal deux0
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($s7)

end :

li $v0, 10
syscall 
