.data
ln : 	.asciiz "\n"
vrai : 	.asciiz "vrai"
faux : 	.asciiz "faux"

.text
main :

move $s7,$sp

#Déclaration fonction
j fonctionskip0
deux0: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
#Retour de la fonction 
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,8
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 4($sp)
jr $ra
fonctionskip0:
#Déclaration fonction
j fonctionskip1
foisdeux1: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 2
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
lw $v0, 16($sp)
sw $v0,0($s7)
addi $sp, $sp, -4
#Retour de la fonction 
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
mult $v0, $t8
mflo $v0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,12
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 4($sp)
addi $sp, $sp, -4
jr $ra
fonctionskip1:
#Déclaration fonction
j fonctionskip2
melimelo5: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 3
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
lw $v0, 32($sp)
sw $v0,0($s7)
addi $sp, $sp, -4
lw $v0, 32($sp)
sw $v0,-4($s7)
addi $sp, $sp, -4
lw $v0, 32($sp)
sw $v0,-8($s7)
addi $sp, $sp, -4
lw $v0, 32($sp)
sw $v0,-12($s7)
addi $sp, $sp, -4
lw $v0, 32($sp)
sw $v0,-16($s7)
addi $sp, $sp, -4
#Déclaration
addi $sp, $sp, -4 
sw $zero, -20($s7)
#Affectation
li $v0, 10
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -20($s7)
#Condition
lw $v0, -16($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -12($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
li $t8, 2
mult $v0, $t8
mflo $t8
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
ble $v0, $t8, condcompafaux1
condcompavrai1: 
li $v0, 1
b fincondcompa1
condcompafaux1: 
li $v0, 0
fincondcompa1: 
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
beqz $v0, sinon1
#Affectation
lw $v0, -20($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
lw $v0, -4($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
jal foisdeux1
addi $sp, $sp, 4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -20($s7)
b finCond1
sinon1: 
finCond1:
#Condition
lw $v0, -20($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
jal deux0
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
div $t8, $v0
mflo $v0
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -4($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
jal deux0
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
ble $v0, $t8, condcompafaux2
condcompavrai2: 
li $v0, 1
b fincondcompa2
condcompafaux2: 
li $v0, 0
fincondcompa2: 
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
beqz $v0, sinon2
b finCond2
sinon2: 
#Affectation
lw $v0, -16($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -12($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -8($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
li $t8, 2
mult $v0, $t8
mflo $t8
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -16($s7)
finCond2:
#Affectation
lw $v0, -8($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
addi $sp, $sp, -4
jal deux0
jal foisdeux1
addi $sp, $sp, 4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
div $t8, $v0
mflo $v0
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -8($s7)
#Retour de la fonction 
lw $v0, -16($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -12($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -8($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -4($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,32
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 20($sp)
addi $sp, $sp, -4
jr $ra
fonctionskip2:
#Déclaration fonction
j fonctionskip3
tripleaddition3: sw $ra, ($sp)
addi $sp, $sp, -4
sw $s7, ($sp)
addi $sp, $sp, -4
li $v0, 4
sw $v0, ($sp)
addi $sp, $sp, -4
move $s7, $sp
lw $v0, 24($sp)
sw $v0,0($s7)
addi $sp, $sp, -4
lw $v0, 24($sp)
sw $v0,-4($s7)
addi $sp, $sp, -4
lw $v0, 24($sp)
sw $v0,-8($s7)
addi $sp, $sp, -4
#Retour de la fonction 
lw $v0, -8($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, -4($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp,$sp, 4
lw $v0, 0($sp)
addi $sp,$sp,20
lw $t8, 0($sp)
addi $sp,$sp, 4
lw $ra,($sp)
addi $sp, $sp, 4
move $s7, $t8
sw $v0, 12($sp)
addi $sp, $sp, -4
jr $ra
fonctionskip3:
#Déclaration
addi $sp, $sp, -4 
sw $zero, 0($s7)
#Déclaration
addi $sp, $sp, -4 
sw $zero, -4($s7)
#Affectation
li $v0, 20
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
li $t8, 2
mult $v0, $t8
mflo $t8
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, -4($s7)
#Affectation
addi $sp, $sp, -4
lw $v0, -4($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
li $v0, 2
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, -4
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
jal foisdeux1
addi $sp, $sp, 4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
add $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
li $t8, 2
mult $v0, $t8
mflo $t8
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $t8, 0($sp)
addi $sp, $sp, 4
lw $v0, 0($sp)
div $t8, $v0
mflo $v0
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 10
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 1
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
li $t8, 2
mult $v0, $t8
mflo $t8
lw $v0, 0($sp)
sub $v0, $v0, $t8
sw $v0, 0($sp)
addi $sp, $sp, -4
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
li $v0, 4
sw $v0, 0($sp)
addi $sp, $sp, -4
jal melimelo5
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4
li $v0, 5
sw $v0, 0($sp)
addi $sp, $sp, -4
jal tripleaddition3
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4
addi $sp, $sp, 4
lw $v0, 0($sp)
sw $v0, 0($s7)
#Ecriture
lw $v0, 0($s7)
sw $v0, 0($sp)
addi $sp, $sp, -4
addi $sp, $sp, 4
lw $v0, 0($sp)
move $a0, $v0
li $v0, 1
syscall

#Saut de ligne
li $v0, 4
la $a0, ln
syscall


end :

li $v0, 10
syscall 
